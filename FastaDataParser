import pandas as pd

# Importa le classi definite prima
class DataParser(ABC):
    @abstractmethod
    def parse(self, file_path):
        pass

# Sottoclasse concreta per il parsing dei file FASTA
class FastaParser(DataParser):
''' creo un costructor che non accetta variabili, ma mi crea un attributo privato che poi mi andrà a contenere la DataFrame '''
    def __init__(self):
        self.__DataFrame = None
'''Creo un methodo che mi parsi il file in un DataFrame ma non mi ritorna nulla, infatti per accedere al DataFrame dovrò chiamare il getter'''
    def parse(self, file_path):
        data = {"ID": [], "Description": [], "Sequence": []}
        with open(file_path, "r") as file:
            current_id = None
            current_description = None
            current_sequence = []

            for line in file:
                if line.startswith(">"):
                    if current_id:
                        data["ID"].append(current_id)
                        data["Description"].append(current_description)
                        data["Sequence"].append("".join(current_sequence))
                    header_parts = line[1:].strip().split(" ", 1)
                    current_id = header_parts[0]
                    current_description = header_parts[1] if len(header_parts) > 1 else ""
                    current_sequence = []
                else:
                    current_sequence.append(line.strip())

            if current_id:
                data["ID"].append(current_id)
                data["Description"].append(current_description)
                data["Sequence"].append("".join(current_sequence))

          self.__DataFrame=pd.DataFrame(data)
'''creo un metodo che mi permetta di vedere la DataFrame creata con parser'''
    def get_DataFrame(self):
        return self.__DataFrame
