from flask import Flask, render_template, request, redirect, url_for, session
from werkzeug.utils import secure_filename
import os
from classes import FastaParser, MitochondrialDNA, SequenceMotif, SequenceAlignment


app = Flask(__name__)
app.secret_key = 'your_secret_key_here'  # Necessario per usare session

# Configurazione upload
UPLOAD_FOLDER = 'uploads' 
ALLOWED_EXTENSIONS = {'fasta'}

if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/')
def home():
    # Retrieve the variable from the session
    uploaded_file = session.get('filepath', None)
    return render_template('home.html', uploaded_file=uploaded_file)
    

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return redirect(url_for('home'))
   
    file = request.files['file']
    if file.filename == '':
        return redirect(url_for('home'))
   
    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        file.save(filepath)
       
        # Parse del file FASTA
        parser = FastaParser()
        parser.parse_file(filepath)
       
        # Salva il DataFrame nella sessione
        session['filepath'] = filepath
        return redirect(url_for('home'))
#non si può render_template in una route per un'altra route , si può solo essere redirectati  
    
@app.route('/dataframe', methods=['GET', 'POST'])
def dataframe():
    if 'filepath' not in session:
        return redirect(url_for('home'))
    
    parser = FastaParser()
    parser.parse_file(session['filepath'])
    df = parser.get_DataFrame()
    data = []
    for _, row in df.iterrows():
        mito_dna = MitochondrialDNA(row['Identifier'], row['Description'], row['Sequence'])
        data.append({
            'ID': row['Identifier'],
            'Description': row['Description'],
            'Sequence': row['Sequence']
        })
    return render_template('dataframe.html', data=data)
