from abc import ABC, abstractmethod
import pandas as pd

# Classe astratta DataManager
class DataManager(ABC):
    @abstractmethod
    def get_data(self):
        pass

    @abstractmethod
    def set_data(self, data):
        pass

# Sottoclasse concreta DataFrameManager
class DataFrameManager(DataManager):
    def __init__(self, dataframe):
        self.__dataframe = dataframe  # Attributo privato

    def get_data(self):
        return self.__dataframe

    def set_data(self, dataframe):
        if not isinstance(dataframe, pd.DataFrame):
            raise ValueError("Il dato fornito deve essere un oggetto Pandas DataFrame.")
        self.__dataframe = dataframe

    def get_sequence_by_id(self, seq_id):
        if "ID" not in self.__dataframe.columns:
            raise KeyError("La colonna 'ID' non esiste nel DataFrame.")
        result = self.__dataframe[self.__dataframe["ID"] == seq_id]
        if result.empty:
            return None
        return result.iloc[0]["Sequence"]

    def get_sequence_by_species(self, species):
        if "Species" not in self.__dataframe.columns:
            raise KeyError("La colonna 'Species' non esiste nel DataFrame.")
        result = self.__dataframe[self.__dataframe["Species"] == species]
        if result.empty:
            return None
        return result.iloc[0]["Sequence"]

# Esempio di utilizzo
data = pd.DataFrame({
    "ID": ["seq1", "seq2"],
    "Species": ["Homo sapiens", "Mus musculus"],
    "Sequence": ["ATCG", "GGCTA"]
})
data_manager = DataFrameManager(data)

# Recupero del DataFrame
print("DataFrame iniziale:")
print(data_manager.get_data())

# Accesso a sequenze tramite ID o specie
print("Sequenza con ID 'seq1':", data_manager.get_sequence_by_id("seq1"))
print("Sequenza per la specie 'Mus musculus':", data_manager.get_sequence_by_species("Mus musculus"))

# Modifica del DataFrame
new_data = pd.DataFrame({
    "ID": ["seq3"],
    "Species": ["Canis lupus"],
    "Sequence": ["TTGC"]
})
data_manager.set_data(new_data)

print("DataFrame aggiornato:")
print(data_manager.get_data())
